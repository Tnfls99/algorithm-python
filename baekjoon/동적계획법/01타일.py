# 동적 계획법 = "이미 했던 연산이 반복되는 결점을 보완"하기 위해 나온 알고리즘
# 대표적인 방법 = 메모제이션(큰 문제에서 작은 문제로, 작은 문제에서 큰 문제로)

import sys
input = sys.stdin.readline

"""
< 문제풀이 핵심 로직 >

이전의 2진 수열들에 00 혹은 1만 더 붙어서 늘어나는 규칙 존재

-> 결국 피보나치 수열과 동일하다.

    n 번째 = n-2번째에서 00을 붙인 결과 + n-1번째에서 1을 붙인 결과

n = 2 00, 11
n = 3 001, 111, 100
n = 4 0000, 0011, 1100, 1001, 1111

"""
n = int(input())
dp = [0] * 1000001
dp[1] = 1
dp[2] = 2

for k in range(3, n+1):
    dp[k] = (dp[k-1] + dp[k-2])%15746

print(dp[n])
